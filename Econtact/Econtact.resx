<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>